name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  verify:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}-${{ hashFiles('.github/workflows/ci.yml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install numpy matplotlib pandas scipy networkx psutil

      - name: "Sanity: list Java and Python"
        run: |
          java -version
          python --version

      - name: Run verification tests
        run: |
          python test_verification.py

      - name: Run experiment suite (non-blocking)
        run: |
          set -e
          python run_experiments.py || echo "Experiments returned non-zero; continuing"

      - name: Check experiment results file (non-blocking)
        run: |
          if [ -f EXPERIMENT_RESULTS.json ]; then
            echo "EXPERIMENT_RESULTS.json exists"
          else
            echo "EXPERIMENT_RESULTS.json not found (non-blocking)"
          fi

      - name: Commit experiment results if present
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          set -e
          if git status --porcelain | grep -q .; then
            git config user.name "github-actions"
            git config user.email "github-actions@users.noreply.github.com"
            git add EXPERIMENT_RESULTS.json experiments/benchmarks/performance_report.json || true
            git commit -m "Update experiment results [skip ci]" || true
            git push origin HEAD:main || true
          fi

      - name: Ensure results file exists (fallback, non-blocking)
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          if [ ! -f EXPERIMENT_RESULTS.json ]; then
            echo '{"summary":{"note":"generated by CI"}}' > EXPERIMENT_RESULTS.json
            git config user.name "github-actions"
            git config user.email "github-actions@users.noreply.github.com"
            git add EXPERIMENT_RESULTS.json
            git commit -m "Add placeholder experiment results [skip ci]" || true
            git push origin HEAD:main || true
          fi


